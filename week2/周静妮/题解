## A 卡片

直接暴力求解，遍历足够多即可

## B 直线

这道题其实就是遍历所有点的组合，数一下有多少种不重复的斜率+截距。注意事项：类型为double的两个数值a和b，即使数值相同，对应的double值也有可能不同，故在cpp中比较两个double值应判断其abs之差是否在很小的一个范围之内，例如1e-8

## C 货物摆放

这道题由于数据比较大，不能直接暴力，所以我们需要首先优化一下，即把n所有的因子放到一起，只需要遍历一下因子即可，然后才能暴力。

注意long long 。

## D 路径

考虑dp思维，要想走到2021处，只能从2020，2019，2018...2000中走，所以只需要每一步都尽可能走这21种选择中距离最短的即可，用辗转相除法计算一下最小公倍数即可。

## F 砝码称重

此题考虑dp，用dp[i][j]来表示用前i个砝码能否称出来重量为j的物品，若dp[i-1][j]==1，则再加上第i个砝码,能称出来的重量分别为j(不上第i个砝码)、j+a[i]（上第i个砝码）、abs(j-a[i])(第i个砝码放到另一边),于是便可得到计算过程：先预处理一下，所有的dp[i][a[i]]都可以被称出来，所以先令所有的dp[i][a[i]]=1,然后双重循环遍历，第一层遍历n个砝码，第二层遍历所有的重量，如果满足dp[i-1][j]==1，就把所有能能称出来的重量都标记了。最后遍历一下dp[n]，记录一下有多少个重量是可以被称出来的即可。

